

#include "data_structures.h"

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  getDifferences
 *  Description:  Obtain which files are new, deleted, and modified/renamed. Received
 *  string is the string representation of a global file list we've received
 * =====================================================================================
 */
file_collection_t* getDifferences(char* received_file_table, file_node_t* our);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  updateExistingListWithDifferences
 *  Description:  Updates existing global file list with differences from
 *				  file_collection_t struct
 * =====================================================================================
 */
void updateExistingListWithDifferences( file_collection_t *differences);


/*
	Description: helper function to get checksum of file_node_t
	Return: checksum of passed file_node_t, or -1 for failure
	Parameters: node to get checksum of
*/
int checksumOfFile(file_node_t *file);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  serializeFileList
 *  Description:  Turns file_node_t linked list into string array; returns NULL on failure
 * =====================================================================================
 */
char *serializeFileList(file_node_t *head);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  deserializeFileList
 *  Description:  Turns string array into file_node_t linked list and returns head on success
 * 				  or NULL on failure
 * =====================================================================================
 */
file_node_t *deserializeFileList(char *serializedFileList);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  addFileNodesToList
 *  Description:  adds linked list of file_collection_t->new_head to end of existing file list
 *                and re-alphabetizes
 * =====================================================================================
 */
void addFileNodesToList( file_node_t *new_modified_head);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  deleteFileNodesFromList
 *  Description:  deletes nodes from existing file list with the same names as filesToDelete
 * =====================================================================================
 */
void deleteFileNodesFromList(file_node_t *filesToDelete);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  set_tracker_con
 *  Description:  Sets globals: tracker connfd and home (DartSync Path)
 * =====================================================================================
 */
void set_tracker_con(int conn);


/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  write_config
 *  Description:  Write a string to the config file in passed directory
 * =====================================================================================
 */
void write_config(char* string);

/* 
 * ===  FUNCTION  ======================================================================
 *         Name:  free_linked_list
 *  Description:  Frees linked list of file_node_t
 * =====================================================================================
 */
void free_linked_list(file_node_t* head);

/*
 * ===  FUNCTION  ======================================================================
 *         Name:  updatePeer_ips
 *  Description:  update newpeerip field for items in linkedlist
 * =====================================================================================
 */

void updatePeer_ips(file_node_t* head_of_list, file_collection_t* differences);


/*
 * ===  FUNCTION  ======================================================================
 *         Name:  do_version_comparisons
 *  Description:  Removes files with lower version numbers than our current from file list
                    Then saves version info to config
 * =====================================================================================
 */
void do_version_comparisons(file_node_t* head_of_mod);